package com.dobriy.test;
import static org.testng.Assert.assertEquals;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import org.testng.annotations.*;
import com.dobriy.main.Pen;

public class PenTest {
  Pen pen;
  Integer inkContainerValue;
  String color;
  
  @Parameters({"inkContainerValue", "sizeLetter","color"})
  @BeforeTest
  public void setUp(Integer inkContainerValue,Integer sizeLetter, String color) {
      pen = new Pen(inkContainerValue, sizeLetter, color);
      this.inkContainerValue = inkContainerValue;
      this.color = color;
  }
  
  @DataProvider(name="dataPens")
  public Object[][] getPen(){
	return new Object[][]{
		{new Pen(2000,2,"Green"),"hello world","hello world"},
		{new Pen(20,2,"Green"),"hello world","hello world"},			// ERROR!!! Bug
		{new Pen(0,4),"helloworld",""},
		{new Pen(8),"hello world","hello wor"},							// ERROR!!! Bug
		{new Pen(8,2),"helloworld","hell"}, 							// ERROR!!! Bug
		{new Pen(2,5,"Green"),"helloworld",""},							// ERROR!!! Bug
		{new Pen(2,5,"Green"),"",""},
		{new Pen(4,-2,"Green"),"helloworld",""},						// ERROR!!! Bug
	}; 
  } 
  
  @Test(dataProvider="dataPens",enabled=true)
  public void writeTest(Pen pen,String beforeWord, String afterWord) {
	  assertEquals(pen.write(beforeWord), afterWord);
  }
  
  @Test(enabled=true)
  public void getColorTest() {
	  assertEquals(pen.getColor(),color);
  }
  
  @Test(enabled = true)
  public void isWorkTest() {
	  assertEquals(pen.isWork(),new Boolean(inkContainerValue>0));
  }
  
  @Test(enabled = true)
  public void doSomethingElseTest() throws IOException {
	  PrintStream old = System.out;
	  ByteArrayOutputStream baos = new ByteArrayOutputStream();
      System.setOut(new PrintStream(baos));
	  pen.doSomethingElse();
	  System.setOut(old);
	  assertEquals(baos.toString().substring(0, baos.size()-2), color);
  }
  
}
